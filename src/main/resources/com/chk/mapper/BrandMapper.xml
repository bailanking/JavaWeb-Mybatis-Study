<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    给字段起别名
-->

<!--<mapper namespace="com.chk.mapper.BrandMapper">-->
<!--    <select id="selectAll" resultType="brand">-->
<!--        select id, brand_name as brandName, company_name as companyName,-->
<!--               ordered, description, status-->
<!--        from tb_brand;-->
<!--    </select>-->
<!--</mapper>-->

<!--
    SQL片段
-->

<!--<mapper namespace="com.chk.mapper.BrandMapper">-->
<!--    -->
<!--    <sql id="brand_column">-->
<!--        id, brand_name as brandName, company_name as companyName, ordered, description, status-->
<!--    </sql>-->


<!--    <select id="selectAll" resultType="brand">-->
<!--        select-->
<!--        <include refid="brand_column"/>-->
<!--        from tb_brand;-->
<!--    </select>-->
<!--</mapper>-->


<!--
    使用resultMap
-->

<mapper namespace="com.chk.mapper.BrandMapper">


    <resultMap id="brandResultMap" type="brand">
        <!--
              id: 完成主键字段的映射
                   column：表的列名
                   property: 实体类的属性名
              result: 完成一般字段的映射
                   column: 表的列名
                   property: 实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>

    <!--
       参数占位符：
            mybatis提供了两种参数占位符：

                 #{} ：执行SQL时，会将 #{} 占位符替换为？，将来自动设置参数值。从上述例子可以看出使用#{} 底层使用的是 `PreparedStatement`

                ${} ：拼接SQL。底层使用的是 `Statement`，会存在SQL注入问题。如下图将 映射配置文件中的 #{} 替换成 ${} 来看效果

        特殊字段的处理：
                1. 转义字符
                2. <![CDATA[内容]]>
    -->

    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>


<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where status = #{status}-->
<!--        and company_name like #{companyName}-->
<!--        and brand_name like #{brandName}-->
<!--    </select>-->


    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != '' ">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != '' ">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != '' ">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="companyName != null and companyName != '' ">
                company_name = #{companyName},
            </if>
            <if test="brandName != null and brandName != '' ">
                brand_name = #{brandName},
            </if>
            <if test="description != null and description != '' ">
                description = #{description},
            </if>
            <if test="ordered != null">
                ordered = #{ordered}
            </if>
        </set>
        where id = #{id};
    </update>

    <delete id="deleteById">
        delete
        from tb_brand
        where id = #{id};
    </delete>
</mapper>